version: "3.2"
services:

  traefik:
    image: "traefik:v2.3"
    #container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      
  whoami:
    image: "traefik/whoami"
    #container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"

  api:
    image: flask_api
    #container_name: ml_api
    build:
      context: ./api
    command: "gunicorn --workers=8 --bind 0.0.0.0:5000 app:app"
    ports:
      - "8090:5000"
    #expose: 
    #  - "5000"
    environment:
      - FLASK_DEBUG=1
    depends_on:
      - redis
      - model
    volumes:
      - ./feedback:/src/feedback
    tty: true
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://localhost:12201"
        tag: "api-logs"
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.api.rule=Host(`api.localhost`)"
    #  - "traefik.http.routers.api.entrypoints=web"

  redis:
    image: redis:5.0.6
    
  model:
    image: ml_service
    #container_name: ml_service
    build:
      context: ./model
    command: "python3 /src/ml_service.py"
    depends_on:
      - redis